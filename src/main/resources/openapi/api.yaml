openapi: 3.0.1
info:
  title: Fast Food API
  version: v0
paths:
  /webhook:
    post:
      tags:
        - Webhook
      operationId: webhookNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookRequest'
        required: true
      responses:
        '201':
          description: Created
  /orders/{id}/payment/approval:
    post:
      description: Aprova o pagamento de um pedido. Este endpoint é de uso temporário, pois a aprovação de pagamento deve ser feita pelo sitema de pagamento.
      tags:
        - Pedidos
      operationId: approvePayment
      parameters:
        - name: id
          description: ID do pedido
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: Created
  /consumers:
    get:
      description: Busca paginada de consumidores
      tags:
        - Consumidores
      operationId: getAllConsumers
      parameters:
        - name: page
          description: Número da página
          in: query
          required: true
          schema:
            minimum: 1
            type: integer
            format: int32
        - name: size
          description: Quantidade de elementos por página
          in: query
          required: true
          schema:
            maximum: 50
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageResultConsumerView'
    post:
      description: Cria um consumidor
      tags:
        - Consumidores
      operationId: createConsumer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsumerMutation'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConsumerView'
  /checkout:
    post:
      description: Realiza o checkout de um carrinho.
      tags:
        - Checkout
      operationId: checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutMutation'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrderView'
  /carts:
    post:
      description: Cria um carrinho
      tags:
        - Carrinho
      operationId: create
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/CartMutation'
        required: true
      responses:
        '201':
          description: Created
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CartView'
  /carts/{cartId}/items:
    post:
      description: Adiciona um item ao carrinho
      tags:
        - Carrinho
      operationId: createItem
      parameters:
        - name: cartId
          description: ID do carrinho
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItemMutation'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CartView'
  /orders/{id}/status:
    patch:
      tags:
        - Pedidos
      operationId: updateOrderStatus
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStatusMutation'
        required: true
      responses:
        '200':
          description: OK
  /orders:
    get:
      description: Busca paginada de pedidos por status
      tags:
        - Pedidos
      operationId: getOrdersByStatus
      parameters:
        - name: page
          description: Número da página
          in: query
          required: true
          schema:
            minimum: 1
            type: integer
            format: int32
        - name: size
          description: Quantidade de elementos por página
          in: query
          required: true
          schema:
            maximum: 20
            type: integer
            format: int32
        - name: status
          description: Status do pedido
          in: query
          required: true
          schema:
            type: string
            enum:
              - WAITING_PAYMENT
              - READY_FOR_PREPARATION
              - IN_PREPARATION
              - READY_FOR_PICKUP
              - FINISHED
              - IN_PROGRESS
              - ALL
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageResultOrderView'
  /orders/{id}/payment/status:
    get:
      tags:
        - Pedidos
      operationId: getPaymentStatusById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
                enum:
                  - PENDING
                  - APPROVED
                  - REJECTED
  /orders/list:
    get:
      tags:
        - Pedidos
      operationId: getOrders
      parameters:
        - name: page
          description: Número da página
          in: query
          required: true
          schema:
            minimum: 1
            type: integer
            format: int32
        - name: size
          description: Quantidade de elementos por página
          in: query
          required: true
          schema:
            maximum: 20
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageResultOrderView'
  /consumers/{cpf}:
    get:
      tags:
        - consumer-controller
      operationId: getConsumerByCpf
      parameters:
        - name: cpf
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConsumerView'
  /carts/{id}:
    get:
      description: Busca um carrinho pelo id
      tags:
        - Carrinho
      operationId: get
      parameters:
        - name: id
          description: ID do carrinho
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CartView'
components:
  schemas:
    WebhookRequest:
      type: object
      properties:
        transactionId:
          type: string
        action:
          type: string
          enum:
            - UPDATED
        status:
          type: string
          enum:
            - APPROVED
            - REJECTED
        dateCreated:
          type: string
          format: date-time
    ConsumerMutation:
      required:
        - cpf
        - email
        - name
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        cpf:
          type: string
    ConsumerView:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        cpf:
          type: string
    CheckoutMutation:
      required:
        - cartId
      type: object
      properties:
        cartId:
          type: integer
          format: int64
    OrderItemView:
      type: object
      properties:
        productId:
          type: string
        productName:
          type: string
        productCategory:
          type: string
          enum:
            - SANDWICH
            - DRINK
            - SIDE_DISH
            - DESSERT
        quantity:
          type: integer
          format: int32
        price:
          type: number
        subtotal:
          type: number
    OrderView:
      type: object
      properties:
        id:
          type: integer
          format: int64
        cartId:
          type: integer
          format: int64
        consumerId:
          type: integer
          format: int64
        payment:
          $ref: '#/components/schemas/PaymentView'
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemView'
        status:
          type: string
          enum:
            - CANCELLED
            - WAITING_PAYMENT
            - READY_FOR_PREPARATION
            - IN_PREPARATION
            - READY_FOR_PICKUP
            - FINISHED
        total:
          type: number
        waitingMinutes:
          description: Tempo de espera em minutos. Tempo calculado após o pagamento do pedido.
          type: integer
          format: int64
    PaymentView:
      type: object
      properties:
        qrCode:
          type: string
        type:
          type: string
          enum:
            - PIX
        amount:
          type: number
        status:
          type: string
          enum:
            - PENDING
            - APPROVED
            - REJECTED
        approvedAt:
          type: string
          format: date-time
    CartMutation:
      type: object
      properties:
        consumerId:
          type: integer
          format: int64
    CartItemView:
      type: object
      properties:
        productId:
          type: string
        productName:
          type: string
        price:
          type: number
        quantity:
          type: integer
          format: int32
        subTotal:
          type: number
        category:
          type: string
          enum:
            - SANDWICH
            - DRINK
            - SIDE_DISH
            - DESSERT
    CartView:
      type: object
      properties:
        id:
          type: integer
          format: int64
        consumerId:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/CartItemView'
        total:
          type: number
    CartItemMutation:
      required:
        - productId
        - quantity
      type: object
      properties:
        productId:
          type: string
        quantity:
          minimum: 1
          type: integer
          format: int32
    OrderStatusMutation:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          enum:
            - CANCELLED
            - WAITING_PAYMENT
            - READY_FOR_PREPARATION
            - IN_PREPARATION
            - READY_FOR_PICKUP
            - FINISHED
    PageResultOrderView:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/OrderView'
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
    PageResultConsumerView:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ConsumerView'
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
